<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>熟悉Hexo功能</title>
    <url>/2017/02/09/My-New-Post/</url>
    <content><![CDATA[<h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>熟悉Hexo写作的过程以及Markdown语法。</p>
<h2 id="Hexo功能测试"><a href="#Hexo功能测试" class="headerlink" title="Hexo功能测试"></a>Hexo功能测试</h2><h3 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h3><span id="more"></span>
<p>其实没什么东西~<br>文章插入<code>&lt;!--more--&gt;</code>就可以在主页隐藏下面的内容</p>
<h3 id="文章导航"><a href="#文章导航" class="headerlink" title="文章导航"></a>文章导航</h3><p>查看左侧文章目录</p>
<h4 id="多级目录"><a href="#多级目录" class="headerlink" title="多级目录"></a>多级目录</h4><h5 id="最多多少级"><a href="#最多多少级" class="headerlink" title="最多多少级"></a>最多多少级</h5><h6 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h6><p>####### 测试一下  这里就没有了<br>应该和Markdown语法相关</p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>为多说增加https支持</title>
    <url>/2017/03/07/add-https-for-duoshuo/</url>
    <content><![CDATA[<p>给全站弄完https，发现打开带评论的文章小绿锁就会消失，打开浏览器的开发者工具一看，主要是多说的头像，以及表情全部使用的是http链接。<br>去<a href="https://dev.duoshuo.com/threads/541d4e8cf220120330054749">多说官方论坛</a>，快三年了还没解决。<br>不过解决方法还是有的，</p>
<ul>
<li><a href="https://github.com/rainwsy/duoshuo-https">https://github.com/rainwsy/duoshuo-https</a></li>
<li><a href="https://www.cacher.cc/2016/12/31/duoshuo-https.html">https://www.cacher.cc/2016/12/31/duoshuo-https.html</a></li>
</ul>
<p>我采用的是后一种，不过这些方法的缺点是如果多说更新了脚本，没法保持最新的版本，出了错误还要下载最新的js脚本文件，重新修改，压缩，替换。</p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>https</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>为网站添加https支持</title>
    <url>/2017/03/07/add-https/</url>
    <content><![CDATA[<p>从上次Github被墙后，不知道怎么回事，用Chrome浏览器打开主页会自动启用https连接,然后提示证书错误。<br>于是就打算找解决方法，参考<a href="https://zhuanlan.zhihu.com/p/22667528">https://zhuanlan.zhihu.com/p/22667528</a>，<br>决定用<a href="https://www.cloudflare.com/">Cloudflare</a>试试，但这个网站不知道怎么回事，时不时会访问不了。<br>但最终还是弄到了小绿锁，<br><img src="/images/screenshots/green_safe.png"><br>访问速度貌似是快了一点，具体效果还要观察几天，希望不会时不时被墙。</p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>https</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2017/02/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>添加伪春菜</title>
    <url>/2017/02/09/add-weichuncai/</url>
    <content><![CDATA[<p>在浏览别人的博客的时候偶然间看到<a href="http://baike.baidu.com/item/%E4%BC%AA%E6%98%A5%E8%8F%9C">伪春菜</a>，<img src="/images/screenshots/screen-shot-weichuncai.png">萌萌的一只，还可以调戏，正好想要搭建自己的个人主页，于是就决定也要去捉一只。然后在<a href="http://www.lmyoaoa.com/inn/archives/4504/">最新通用版伪春菜下载</a>找到了网页版的。但是这个是Word Press的插件，而且需要配置后台。我既然选了用Github Page搭建个人主页，那么就只能自己动手修改，弄个静态页面的伪春菜，虽然功能上可能会差点，但后期可以慢慢完善。</p>
<span id="more"></span>

<h2 id="下载伪春菜UTF8版"><a href="#下载伪春菜UTF8版" class="headerlink" title="下载伪春菜UTF8版"></a>下载伪春菜UTF8版</h2><p><a href="http://www.lmyoaoa.com/downloads/weichuncai_utf8.zip">下载链接</a></p>
<h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><p>发现其实东西不多，有用的几个文件及文件夹如下：</p>
<blockquote>
<p>imgs : 对话框的图片<br>skin : 皮肤或者称外貌，有三款，也可以自己添加，命名为face1.gif，face2.gif，face3.gif<br>css&#x2F;style.css : 样式，有些需要调整<br>js&#x2F;common.js : 核心程序</p>
</blockquote>
<h2 id="开始搬运"><a href="#开始搬运" class="headerlink" title="开始搬运"></a>开始搬运</h2><ul>
<li>进入next主题的source文件夹下</li>
<li>复制<code>imgs</code>文件夹下的图片到<code>images</code>目录下</li>
<li>复制<code>skins</code>文件夹下的文件夹到<code>images</code>目录下</li>
<li>复制<code>style.css</code>到<code>css</code>目录下，并修改图片的url指向</li>
<li>复制<code>common.js</code>到<code>lib/weichuncai/</code>目录下，重命名为<code>weichuncai.js</code></li>
<li>修改<code>weichuncai.js</code>，去除后台相关的代码，并增加手机端触摸拖动的功能，具体参考<a href="/lib/weichuncai/weichuncai.js">weichuncai.js</a></li>
<li>进入<code>../layout</code>文件夹</li>
<li>添加css，修改<code>_partials/head.swig</code>文件,添加下面的代码：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">weichuncai</span> %&#125;</span><br><span class="line">    &lt;link href=<span class="string">&quot;&#123;&#123; url_for(theme.css) &#125;&#125;/weichuncai.css?v=&#123;&#123; theme.version &#125;&#125;&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span> /&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>添加js，修改<code>_scripts/vendors.swig</code>，添加下面的代码：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">weichuncai</span> %&#125;</span><br><span class="line">  &#123;% set js_vendors.<span class="property">weichuncai</span>  = <span class="string">&#x27;weichuncai/weichuncai.js?v=1.0.1&#x27;</span> %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>添加伪春菜到页面，修改<code>_layout.swig</code>,添加下面的代码到<code>body</code>标签中：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">weichuncai</span> %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> imagewidth = <span class="string">&quot;85&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> imageheight = <span class="string">&quot;152&quot;</span>;</span><br><span class="line"><span class="title function_">createFace</span>(<span class="string">&quot;/images/rakutori/face1.gif&quot;</span>, <span class="string">&quot;/images/rakutori/face2.gif&quot;</span>, <span class="string">&quot;/images/rakutori/face3.gif&quot;</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>最后修改主题下面的<code>_config.yml</code>，用于控制伪春菜的开启与否，添加：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># weichuncai</span><br><span class="line">weichuncai: true</span><br></pre></td></tr></table></figure>
<p>OK，到这里伪春菜就添加好了，重新<code>hexo s -g</code>就能看到效果了，之后更多的功能还要修改<code>weichuncai.js</code>，代码很简单，完全可以自己改。我也会时不时地进行更新。</p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>最后还是要感谢<a href="http://www.lmyoaoa.com/inn/">最初作者</a>的开源代码,以及皮肤的<a href="https://zh.moegirl.org/zh-hans/%E6%B7%B1%E6%B8%8A%E8%90%BD%E9%B8%9F">画师</a>。</p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>分享</tag>
        <tag>伪春菜</tag>
      </tags>
  </entry>
  <entry>
    <title>Bash导出指定表</title>
    <url>/2017/02/23/dump-db/</url>
    <content><![CDATA[<p>刚学bash练手, 用来备份指定表</p>
<p>-h 数据库ip<br>-u 用户名<br>-p 密码<br>-d 数据库<br>-P 端口<br>-f 匹配表前缀<br>-o 输出目录</p>
<p>数据库为mysql</p>
<span id="more"></span>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从数据库备份指定表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#源数据库</span></span><br><span class="line">source_host=127.0.0.1</span><br><span class="line">source_port=3306</span><br><span class="line">source_db=xxx-admin</span><br><span class="line">source_username=root</span><br><span class="line">source_password=</span><br><span class="line"></span><br><span class="line"><span class="comment">#需要操作表的前缀</span></span><br><span class="line">table_prefix=</span><br><span class="line"></span><br><span class="line">document_name=<span class="string">&quot;`date +%Y%m%d`&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$#</span> -lt 1 ]];<span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;USAGE:`basename <span class="variable">$0</span>` [-h host] [-u username] [-p password] [-P port]&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;             [-d database] [-f prefix] [-o output_document]&quot;</span>  </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -h host (127.0.0.1)&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -u username (root)&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -p password ()&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -d database (xxx-admin)&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -P port (3306)&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -f prefix () default all&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;    -o output document() default current date&quot;</span></span><br><span class="line">	<span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span>    </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> :h:u:p:P:d:f:o: name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">case</span> <span class="variable">$name</span> <span class="keyword">in</span></span><br><span class="line">	h)source_host=<span class="variable">$OPTARG</span>;;</span><br><span class="line">	u)source_username=<span class="variable">$OPTARG</span>;;</span><br><span class="line">	d)source_db=<span class="variable">$OPTARG</span>;; </span><br><span class="line">	p)source_password=<span class="variable">$OPTARG</span>;; </span><br><span class="line">	P)source_port=<span class="variable">$OPTARG</span>;; </span><br><span class="line">	f)table_prefix=<span class="variable">$OPTARG</span>;;</span><br><span class="line">	o)document_name=<span class="variable">$OPTARG</span>;;</span><br><span class="line">	\?) <span class="built_in">echo</span> <span class="string">&quot;Invalid option :`basename <span class="variable">$0</span>` [-h host] [-u username] [-p password] [-P port] [-d database] [-f prefix] [-o output_document]&quot;</span></span><br><span class="line">	<span class="built_in">exit</span> 1</span><br><span class="line">	;;</span><br><span class="line">	:) <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$0</span>:Must supply an argument to -<span class="variable">$OPTARG</span>.&quot;</span></span><br><span class="line">	<span class="built_in">exit</span> 1</span><br><span class="line">	;;</span><br><span class="line">	<span class="keyword">esac</span>  </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建存放导出数据的文件夹</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">&quot;./&quot;</span><span class="variable">$&#123;document_name&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">mkdir</span> <span class="variable">$&#123;document_name&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询表名的sql语句</span></span><br><span class="line">sql_query_table=<span class="string">&#x27;select table_name from information_schema.tables where table_schema=&quot;&#x27;</span><span class="variable">$&#123;source_db&#125;</span><span class="string">&#x27;&quot; and table_name like &quot;&#x27;</span><span class="variable">$&#123;table_prefix&#125;</span><span class="string">&#x27;%&quot;;&#x27;</span> </span><br><span class="line"><span class="comment">#mysql执行参数</span></span><br><span class="line">mysql_params=<span class="string">&#x27;-u&#x27;</span><span class="variable">$&#123;source_username&#125;</span><span class="string">&#x27; -P&#x27;</span><span class="variable">$&#123;source_port&#125;</span><span class="string">&#x27; -h&#x27;</span><span class="variable">$&#123;source_host&#125;</span><span class="string">&#x27; &#x27;</span><span class="variable">$&#123;source_db&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#密码参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$source_password</span> ];<span class="keyword">then</span></span><br><span class="line">	mysql_params=<span class="variable">$&#123;mysql_params&#125;</span><span class="string">&#x27; -p&#x27;</span><span class="variable">$&#123;source_password&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询参数</span></span><br><span class="line">query_params=<span class="variable">$&#123;mysql_params&#125;</span><span class="string">&#x27; -e &#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="variable">$&#123;sql_query_table&#125;</span><span class="string">&quot;&#x27;&quot;</span></span><br><span class="line"><span class="comment">#导出参数</span></span><br><span class="line">dump_params=<span class="variable">$&#123;mysql_params&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Params: &quot;</span><span class="variable">$dump_params</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;connecting mysql ...&quot;</span></span><br><span class="line"><span class="built_in">eval</span> mysql  <span class="variable">$query_params</span> | awk <span class="string">&#x27;&#123;if (NR&gt;1)&#123;print $0&#125;&#125;&#x27;</span> | sed s/[[:space:]]//g | <span class="keyword">while</span> <span class="built_in">read</span> table_name; <span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;dumping table: &quot;</span><span class="variable">$&#123;table_name&#125;</span></span><br><span class="line">	save_path=<span class="string">&#x27;./&#x27;</span><span class="variable">$&#123;document_name&#125;</span><span class="string">&#x27;/&#x27;</span><span class="variable">$&#123;table_name&#125;</span><span class="string">&#x27;.sql&#x27;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;saving to &quot;</span><span class="variable">$save_path</span></span><br><span class="line">	<span class="built_in">eval</span> mysqldump <span class="variable">$dump_params</span><span class="string">&#x27; &#x27;</span><span class="variable">$&#123;table_name&#125;</span><span class="string">&#x27;&gt;&#x27;</span><span class="variable">$save_path</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;**************************************&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;    dumping data finished.&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;**************************************&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>圣诞快乐</title>
    <url>/2017/12/17/merry-christmas/</url>
    <content><![CDATA[<p>圣诞快乐！</p>
<span id="more"></span>

<p>从贺卡上知道这个网址的小伙伴，圣诞快乐，试试和页面里的伪春菜（没错，就是那个粉色的妹子）聊会天吧，比如“圣诞快乐”什么的，也许会有惊喜！(要圣诞当天才行哦)</p>
]]></content>
      <categories>
        <category>节日</category>
      </categories>
      <tags>
        <tag>节日</tag>
        <tag>圣诞</tag>
      </tags>
  </entry>
  <entry>
    <title>图片压缩网站TinyPNG.com</title>
    <url>/2017/02/09/tiny-png/</url>
    <content><![CDATA[<p>分享一个图片压缩的网站：<a href="https://tinypng.com/">tinypng.com</a><br>一般我上传的图片都会去这网站压缩一下，高的能压缩90%以上。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>图片压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>Go中Json解析遇到的问题</title>
    <url>/2017/03/07/go-json-unmarshal/</url>
    <content><![CDATA[<p>最近用到Go解析Json字符串，本来没仔细看，结果定义结构体的时候忽略了成员名的大小写问题，导致变量赋值始终不成功。折腾了一会，写个测试程序看看Json转化的一些规则。</p>
<span id="more"></span>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Test1 <span class="keyword">struct</span> &#123;</span><br><span class="line">	Va1 <span class="type">int</span></span><br><span class="line">	Va2 <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Test2 <span class="keyword">struct</span> &#123;</span><br><span class="line">	va1 <span class="type">int</span></span><br><span class="line">	va2 <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Test3 <span class="keyword">struct</span> &#123;</span><br><span class="line">	Va1 <span class="type">int</span> <span class="string">`json:&quot;te1&quot;`</span></span><br><span class="line">	Va2 <span class="type">int</span> <span class="string">`json:&quot;va1&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> test1 Test1</span><br><span class="line">	err := json.Unmarshal([]<span class="type">byte</span>(<span class="string">`&#123;&quot;Va1&quot;:1,&quot;Va2&quot;:2&#125;`</span>), &amp;test1)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;test1: %+v\n&quot;</span>, test1)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 大小写不敏感</span></span><br><span class="line">	<span class="keyword">var</span> test11 Test1</span><br><span class="line">	err = json.Unmarshal([]<span class="type">byte</span>(<span class="string">`&#123;&quot;va1&quot;:1,&quot;vA2&quot;:2&#125;`</span>), &amp;test11)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;test11: %+v\n&quot;</span>, test11)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 如果字段重复则后面的会覆盖前面的</span></span><br><span class="line">	<span class="keyword">var</span> test12 Test1</span><br><span class="line">	err = json.Unmarshal([]<span class="type">byte</span>(<span class="string">`&#123;&quot;va1&quot;:1,&quot;vA2&quot;:2,&quot;Va2&quot;:3&#125;`</span>), &amp;test12)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;test13: %+v\n&quot;</span>, test12)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 结构体里面的成员名如果是小写,是无法赋值成功的</span></span><br><span class="line">	<span class="comment">// 这与Go的变量命名规则有关,首字母大写的是可以导出的</span></span><br><span class="line">	<span class="keyword">var</span> test2 Test2</span><br><span class="line">	err = json.Unmarshal([]<span class="type">byte</span>(<span class="string">`&#123;&quot;va1&quot;:1,&quot;va2&quot;:2&#125;`</span>), &amp;test2)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;test2: %+v\n&quot;</span>, test2)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 如果设置了标签,则以标签为准,忽略成员名</span></span><br><span class="line">	<span class="keyword">var</span> test3 Test3</span><br><span class="line">	err = json.Unmarshal([]<span class="type">byte</span>(<span class="string">`&#123;&quot;va1&quot;:1,&quot;te1&quot;:2&#125;`</span>), &amp;test3)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;test3: %+v\n&quot;</span>, test3)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 如果设置了标签,则以标签为准,忽略成员名</span></span><br><span class="line">	<span class="keyword">var</span> test31 Test3</span><br><span class="line">	err = json.Unmarshal([]<span class="type">byte</span>(<span class="string">`&#123;&quot;te1&quot;:2,&quot;va1&quot;:1,&quot;va2&quot;:3&#125;`</span>), &amp;test31)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Printf(<span class="string">&quot;test31: %+v\n&quot;</span>, test31)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>最终结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test1: &#123;Va1:1 Va2:2&#125;</span><br><span class="line">test11: &#123;Va1:1 Va2:2&#125;</span><br><span class="line">test13: &#123;Va1:1 Va2:3&#125;</span><br><span class="line">test2: &#123;va1:0 va2:0&#125;</span><br><span class="line">test3: &#123;Va1:2 Va2:1&#125;</span><br><span class="line">test31: &#123;Va1:2 Va2:1&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Go</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>献给最最爱的老婆</title>
    <url>/2019/09/30/show-love/</url>
    <content><![CDATA[<p>🇭​ 🇰 🇧❤🇿 🇾 🇯​<br>🇫 🇴 🇷 🇪 🇻 🇪 🇷</p>
<span id="more"></span>


<style type="text/css">
.digit{font-family:"Times New Roman";font-size:28px}
#words{font-family:"sans-serif";font-size:18px;color:#666}"
</style>
<div id="love-content">
  <div id="loveHeart" style="position:relative">
    <canvas id="garden" width="670" height="625" style="margin-left:-20px"></canvas>
    <div id="words" style="position:absolute;margin-top:226.5px;width:100%;text-align:center;top:0;">
      <div id="messages" style="display:none;">
      亲爱的老婆<br/>这是我们相遇后的时间：
        <div id="elapseClock"><span class="digit">2376</span> 天 <span class="digit">03</span> 时 <span class="digit">55</span> 分 <span class="digit">59</span> 秒
        </div>
      </div>
      <div id="messages2" style="display:none;">
      这是我们结婚后的时间：
        <div id="elapseClock2"><span class="digit">2376</span> 天 <span class="digit">03</span> 时 <span class="digit">55</span> 分 <span class="digit">59</span> 秒
        </div>
      </div>
      <div id="loveu" style="padding:5px;font-size:22px;margin-top:30px;text-align:center;display:none">
          爱你直到永远。<br>
        <div class="signature" style="text-align:center;margin-top:10px;font-size:20px;font-style:italic">- HKB</div>
      </div>
    </div>
  </div>
  <div id="code" style="text-align:center;display:none">
    <span>我可能不够高大也不够英俊，</span>
    <br/>
    <span>我可能也不够富有，</span>
    <br/>
    <span>但遇见你，</span>
    <br/>
    <span>是我生命里最大的幸运，</span>
    <br/>
    <span>我的余生，只陪着你！</span>
    <br/>
    <br/>
    <span>今天是结婚一周年纪念日，</span>
    <span>给我亲爱的老婆献上玫瑰花~~</span>
    <br/>
  </div>
</div>

]]></content>
      <categories>
        <category>恩爱</category>
      </categories>
      <tags>
        <tag>秀恩爱</tag>
        <tag>表白</tag>
      </tags>
  </entry>
  <entry>
    <title>字典树的Node.js语言实现</title>
    <url>/2017/02/23/trie-tree-js/</url>
    <content><![CDATA[<p>敏感词处理最开始本来是用Node写了一遍实现,<br>这里也顺便贴出来吧。</p>
<span id="more"></span>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 敏感词处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> readline = <span class="built_in">require</span>(<span class="string">&#x27;readline&#x27;</span>);</span><br><span class="line"><span class="comment">// 敏感词树</span></span><br><span class="line"><span class="keyword">var</span> root = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> start_time = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="comment">// 添加敏感词</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addWord</span>(<span class="params">word</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (word == <span class="literal">null</span> || word.<span class="property">length</span> == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> wordArray = <span class="title class_">Array</span>.<span class="title function_">from</span>(word);</span><br><span class="line">  <span class="keyword">var</span> wordLen = wordArray.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> current = root;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> wordArray) &#123;</span><br><span class="line">    <span class="keyword">if</span> (current[wordArray[i]] == <span class="literal">null</span>) &#123;</span><br><span class="line">      current[wordArray[i]] = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    current = current[wordArray[i]];</span><br><span class="line">    <span class="keyword">if</span> (i == wordLen) &#123;</span><br><span class="line">      current[<span class="string">&quot;END&quot;</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//敏感词存在out6.txt中,每行一个词</span></span><br><span class="line"><span class="keyword">var</span> rl = readline.<span class="title function_">createInterface</span>(&#123;</span><br><span class="line">  <span class="attr">input</span>: fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;out6.txt&#x27;</span>),</span><br><span class="line">  <span class="attr">output</span>: process.<span class="property">stdout</span>,</span><br><span class="line">  <span class="attr">terminal</span>: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rl.<span class="title function_">on</span>(<span class="string">&#x27;line&#x27;</span>, <span class="keyword">function</span>(<span class="params">line</span>) &#123;</span><br><span class="line">  <span class="title function_">addWord</span>(line);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">rl.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="keyword">function</span>(<span class="params">line</span>) &#123;</span><br><span class="line">  <span class="comment">//需要过滤敏感词的文件在out_test.txt中</span></span><br><span class="line">  fs.<span class="title function_">readFile</span>(<span class="string">&#x27;out_test.txt&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">    start_time = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="comment">//console.log(JSON.stringify(root));</span></span><br><span class="line">    <span class="title function_">replaceWith</span>(data.<span class="title function_">toString</span>(), <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> end_time = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(end_time.<span class="title function_">getTime</span>() - start_time.<span class="title function_">getTime</span>());</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换敏感词</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">replaceWith</span>(<span class="params">text, mask</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (text == <span class="literal">null</span> || text.<span class="property">length</span> == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">var</span> textArray = <span class="title class_">Array</span>.<span class="title function_">from</span>(text);</span><br><span class="line">  <span class="keyword">var</span> textLen = textArray.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= textLen; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> charLen = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> current = root;</span><br><span class="line">    <span class="keyword">var</span> k = i;</span><br><span class="line">    <span class="keyword">while</span> ((current = current[textArray[k]]) != <span class="literal">null</span>) &#123;</span><br><span class="line">      charLen += <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (current[<span class="string">&quot;END&quot;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; charLen; j++) &#123;</span><br><span class="line">          textArray[i + j] = mask;</span><br><span class="line">        &#125;</span><br><span class="line">        i = i + charLen - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (k == textLen) &#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      k++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> textArray.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Node</tag>
        <tag>敏感词</tag>
      </tags>
  </entry>
  <entry>
    <title>使用畅言云评评论插件</title>
    <url>/2025/02/13/use-changyan/</url>
    <content><![CDATA[<p>之前用的LiveRe，但是近期发现国内登录不了管理后台，而且评论底部自带广告。之前畅言需要备案，现在也取消了这个要求，lite版还免广告，Next主题也已经集成，替换十分轻松。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>畅言</tag>
        <tag>评论</tag>
      </tags>
  </entry>
  <entry>
    <title>字典树的Go语言实现</title>
    <url>/2017/02/23/trie-tree/</url>
    <content><![CDATA[<p>刚学Go语言练手,用于敏感词匹配<br>字典树的Go语言实现</p>
<span id="more"></span>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> triecheck</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参考( http://blog.csdn.net/workwithwebis3w/article/details/38294889 )</span></span><br><span class="line"><span class="comment">// 敏感词字典树</span></span><br><span class="line"><span class="keyword">type</span> TrieTree <span class="keyword">struct</span> &#123;</span><br><span class="line">	root <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取字典树</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TrieTree)</span></span> GetRoot() <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">	<span class="keyword">return</span> t.root</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 添加单词到字典树(Trie Tree)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TrieTree)</span></span> AddWord(word <span class="type">string</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> t.root == <span class="literal">nil</span> &#123;</span><br><span class="line">		t.root = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> wordArray = strings.Split(word, <span class="string">&quot;&quot;</span>)</span><br><span class="line">	<span class="keyword">var</span> wordLen = <span class="built_in">len</span>(wordArray)</span><br><span class="line">	<span class="keyword">var</span> current = t.root</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; wordLen; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> current[wordArray[i]] == <span class="literal">nil</span> &#123;</span><br><span class="line">			current[wordArray[i]] = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">		&#125;</span><br><span class="line">		current = (current[wordArray[i]]).(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">		<span class="keyword">if</span> i == (wordLen - <span class="number">1</span>) &#123;</span><br><span class="line">			current[<span class="string">&quot;END&quot;</span>] = <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 替换敏感词(尽量匹配最长敏感词)</span></span><br><span class="line"><span class="comment"> * input: 输入字符串</span></span><br><span class="line"><span class="comment"> * mask: 敏感词替换字符</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回: 替换后的字符串, 是否有敏感词</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TrieTree)</span></span> MaxReplaceWith(input <span class="type">string</span>, mask <span class="type">string</span>) (<span class="type">string</span>, <span class="type">bool</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(input) == <span class="number">0</span> || t.root == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> input, <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> textArray = strings.Split(input, <span class="string">&quot;&quot;</span>)</span><br><span class="line">	<span class="keyword">var</span> textLen = <span class="built_in">len</span>(textArray)</span><br><span class="line">	<span class="keyword">var</span> modified = <span class="literal">false</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; textLen; i++ &#123;</span><br><span class="line">		<span class="keyword">var</span> charLen = <span class="number">0</span></span><br><span class="line">		<span class="keyword">var</span> current = t.root</span><br><span class="line">		<span class="keyword">var</span> pos = i</span><br><span class="line">		<span class="keyword">var</span> lastI = <span class="number">-1</span></span><br><span class="line">		<span class="keyword">var</span> lastLen = <span class="number">-1</span></span><br><span class="line">		<span class="keyword">for</span> current[textArray[pos]] != <span class="literal">nil</span> &#123;</span><br><span class="line">			current = (current[textArray[pos]]).(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">			charLen += <span class="number">1</span></span><br><span class="line">			<span class="keyword">if</span> current[<span class="string">&quot;END&quot;</span>] == <span class="literal">true</span> &#123;</span><br><span class="line">				lastI = i</span><br><span class="line">				lastLen = charLen</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> pos == (textLen - <span class="number">1</span>) &#123;</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			pos++</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> lastLen &gt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; lastLen; j++ &#123;</span><br><span class="line">				textArray[lastI+j] = mask</span><br><span class="line">			&#125;</span><br><span class="line">			i = lastI + lastLen - <span class="number">1</span></span><br><span class="line">			modified = <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> modified &#123;</span><br><span class="line">		<span class="keyword">return</span> strings.Join(textArray, <span class="string">&quot;&quot;</span>), modified</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> input, <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 替换敏感词(匹配到最短的立即替换)</span></span><br><span class="line"><span class="comment"> * input: 输入字符串</span></span><br><span class="line"><span class="comment"> * mask: 敏感词替换字符</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回: 替换后的字符串, 是否有敏感词</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *TrieTree)</span></span> MinReplaceWith(input <span class="type">string</span>, mask <span class="type">string</span>) (<span class="type">string</span>, <span class="type">bool</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(input) == <span class="number">0</span> || t.root == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> input, <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> textArray = strings.Split(input, <span class="string">&quot;&quot;</span>)</span><br><span class="line">	<span class="keyword">var</span> textLen = <span class="built_in">len</span>(textArray)</span><br><span class="line">	<span class="keyword">var</span> modified = <span class="literal">false</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; textLen; i++ &#123;</span><br><span class="line">		<span class="keyword">var</span> charLen = <span class="number">0</span></span><br><span class="line">		<span class="keyword">var</span> current = t.root</span><br><span class="line">		<span class="keyword">var</span> pos = i</span><br><span class="line">		<span class="keyword">for</span> current[textArray[pos]] != <span class="literal">nil</span> &#123;</span><br><span class="line">			current = (current[textArray[pos]]).(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">			charLen += <span class="number">1</span></span><br><span class="line">			<span class="keyword">if</span> current[<span class="string">&quot;END&quot;</span>] == <span class="literal">true</span> &#123;</span><br><span class="line">				<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; charLen; j++ &#123;</span><br><span class="line">					textArray[i+j] = mask</span><br><span class="line">				&#125;</span><br><span class="line">				i = i + charLen - <span class="number">1</span></span><br><span class="line">				modified = <span class="literal">true</span></span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> pos == (textLen - <span class="number">1</span>) &#123;</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			pos++</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> modified &#123;</span><br><span class="line">		<span class="keyword">return</span> strings.Join(textArray, <span class="string">&quot;&quot;</span>), modified</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> input, <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试程序</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	. <span class="string">&quot;./trie_check&quot;</span></span><br><span class="line">	<span class="string">&quot;bufio&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;io&quot;</span></span><br><span class="line">	<span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line">	<span class="string">&quot;os&quot;</span></span><br><span class="line">	<span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tc = <span class="built_in">new</span>(TrieTree)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">processLine</span><span class="params">(line []<span class="type">byte</span>)</span></span> &#123;</span><br><span class="line">	tc.AddWord(<span class="type">string</span>(line))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ReadLine</span><span class="params">(filePth <span class="type">string</span>, hookfn <span class="keyword">func</span>([]<span class="type">byte</span>)</span></span>) <span class="type">error</span> &#123;</span><br><span class="line">	f, err := os.Open(filePth)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> f.Close()</span><br><span class="line"></span><br><span class="line">	bfRd := bufio.NewReader(f)</span><br><span class="line">	<span class="keyword">for</span> &#123;</span><br><span class="line">		line, _, err := bfRd.ReadLine()</span><br><span class="line">		hookfn(line)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> err</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> start_time = time.Now().UnixNano()</span><br><span class="line">	<span class="comment">//敏感词存在out6.txt中,每行一个词</span></span><br><span class="line">	ReadLine(<span class="string">&quot;out6.txt&quot;</span>, processLine)</span><br><span class="line">	<span class="keyword">var</span> end_time = time.Now().UnixNano()</span><br><span class="line">	fmt.Println(<span class="string">&quot;Create trie tree:&quot;</span>, <span class="type">float64</span>(end_time-start_time)/<span class="number">1000000</span>, <span class="string">&quot;ms&quot;</span>)</span><br><span class="line">	<span class="comment">//需要过滤敏感词的文件在out_test.txt中</span></span><br><span class="line">	fi, err := os.Open(<span class="string">&quot;out_test.txt&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> fi.Close()</span><br><span class="line">	fd, err := ioutil.ReadAll(fi)</span><br><span class="line">	start_time = time.Now().UnixNano()</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">		tc.MinReplaceWith(<span class="type">string</span>(fd), <span class="string">&quot;*&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	out, changed := tc.MinReplaceWith(<span class="string">&quot;fuckfUCKfucao 操蛋 啊啊会CKFu##Ck昂送伞&quot;</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line">	end_time = time.Now().UnixNano()</span><br><span class="line">	fmt.Println(out, changed)</span><br><span class="line">	fmt.Println(<span class="type">float64</span>(end_time-start_time)/<span class="number">1000000</span>, <span class="string">&quot;ms&quot;</span>)</span><br><span class="line">	start_time = time.Now().UnixNano()</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">		tc.MaxReplaceWith(<span class="type">string</span>(fd), <span class="string">&quot;*&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	out3, changed := tc.MaxReplaceWith(<span class="string">&quot;fuckfUCKfucao 操蛋 啊啊会CKFu##Ck 昂送伞&quot;</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line">	end_time = time.Now().UnixNano()</span><br><span class="line">	fmt.Println(out3, changed)</span><br><span class="line">	fmt.Println(<span class="type">float64</span>(end_time-start_time)/<span class="number">1000000</span>, <span class="string">&quot;ms&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Go</tag>
        <tag>敏感词</tag>
      </tags>
  </entry>
  <entry>
    <title>使用网易云跟帖代替多说</title>
    <url>/2017/03/23/use-gentie/</url>
    <content><![CDATA[<p>三月二十一日，<a href="http://dev.duoshuo.com/threads/58d10f50e9a8cb4433fd5c5d">多说官网</a>突然说关闭多说业务，没办法我们只能找替代的产品了，尝试使用<a href="https://gentie.163.com/index.html">网易云跟帖</a>，还好Next主题集成了云跟帖，只要在配置文件中将Product Key填一下就好了。<br>但是初步测试了下，发现几个问题：<br>1、评论昵称不知道在哪里修改；<br>2、评论不显示，即使关闭了审核也没有，后台也看不到评论。</p>
<p>尝试使用<a href="http://www.uyan.cc/">友言</a>，然而友言并不支持https。<br>尝试使用畅言，但是需要网站备案。</p>
<p>六小时后，跟帖终于刷出来了~~  T_T</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>评论</tag>
      </tags>
  </entry>
  <entry>
    <title>使用LiveRe代替网易云跟帖</title>
    <url>/2017/07/10/use-livere/</url>
    <content><![CDATA[<p>网易云跟贴停止服务公告</p>
<p>亲爱的朋友们：</p>
<p>因公司业务发展需要，我们不得不遗憾地通知大家，云跟贴产品将于2017年8月1日停止服务。在此之前可以通过后台的数据导出功能导出自己站点的跟贴数据。感谢大家一直以来对云跟贴的支持与厚爱，对于此次产品关停给您带来的不便我们深表歉意，希望在网易其他产品与业务上，我们能继续为您服务！</p>
<p>网易云跟贴</p>
<p>2017年7月6日</p>
<p>没办法,只能用LiveRe了</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>评论</tag>
      </tags>
  </entry>
</search>
